# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  aws-region: ${{ secrets.AWS_REGION }}
  ROOT_PATH: '${{ github.workspace }}/LandingZone/resources'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  configure-veru-approval-environment:
  # This workflow contains a single job called "build"
  #build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # This should work
      # Runs a single command using the runners shell
      - name: Checkout repository
        uses: actions/checkout@v3
        # with:
        #  path: './LandingZone/resources'

    
      

      - name: Initialize Terraform
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          working-directory: ${{ env.ROOT_PATH }}
        run: |
          pwd
          terraform init
        # working-directory: './LandingZone/resources'
        
        
        
      - name: Terraform plan
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          working-directory: ${{ env.ROOT_PATH }}

        run: terraform plan
        # To be used if working directory is declared in the steps section
        # working-directory: './LandingZone/resources'
        # To be used if working directory is declared as variable at global level
        
      - name: Formating
        run: terraform fmt
        # To be used if working directory is declared in the steps section
        # working-directory: './LandingZone/resources'
        # To be used if working directory is declared as variable at global level
        working-directory: ${{ env.ROOT_PATH }}
  terraform_apply:
        name: 'terraform apply'
        needs: [configure-veru-approval-environment]
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3
          env:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
            
        - name: Terraform Initialized
          run: terraform init
          working-directory: ${{ env.ROOT_PATH }}
        - name: terraform Apply
          run: terraform apply -auto-approve
          # To be used if working directory is declared in the steps section
          # working-directory: './LandingZone/resources'
          # To be used if working directory is declared as variable at global level
          working-directory: ${{ env.ROOT_PATH }}
        #- name: terraform Destroy
        #  run: terraform destroy -auto-approve
        # To be used if working directory is declared in the steps section
        # working-directory: './LandingZone/resources'
        # To be used if working directory is declared as variable at global level
        #  working-directory: ${{ env.ROOT_PATH }}
